@{
    ViewBag.Title = "Sign In";
    Layout = null;
}

<!doctype html>
<html lang="en" data-layout="vertical" data-topbar="light" data-sidebar="light" data-sidebar-size="lg" data-sidebar-image="none" data-preloader="enable">
<head>
    @await Html.PartialAsync("_title_meta")
    @await Html.PartialAsync("_head_css")
</head>
<body>

    <div class="auth-page-wrapper pt-5">
        <!-- auth page bg -->
        <div class="auth-one-bg-position auth-one-bg" id="auth-particles">
            <div class="bg-overlay"></div>

            <div class="shape">
                <svg xmlns="http://www.w3.org/2000/svg" version="1.1" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 1440 120">
                    <path d="M 0,36 C 144,53.6 432,123.2 720,124 C 1008,124.8 1296,56.8 1440,40L1440 140L0 140z"></path>
                </svg>
            </div>
        </div>

        <!-- auth page content -->
        <div class="auth-page-content">
            <div class="container">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="text-center mt-sm-5 mb-4 text-white-50">
                            <div>
                                <a href="#" class="d-inline-block auth-logo">
                                    <img src="~/assets/images/LogoLogin.png" alt="" height="120">
                                </a>
                            </div>
                            <p class="mt-3 fs-15 fw-medium">Expermed, tu salud en manos expertas</p>
                        </div>
                    </div>
                </div>

                <!-- Login form and spinner -->
                <div class="row justify-content-center">
                    <div class="col-md-8 col-lg-6 col-xl-5">
                        <div class="card mt-4">
                            <div class="card-body p-4">
                                <div class="text-center mt-2">
                                    <h5 class="text-primary">Bienvenido de vuelta!</h5>
                                    <p class="text-muted">Iniciar Sesión para acceder a Expermed.</p>
                                </div>
                                <div class="p-2 mt-4">
                                    <form id="loginForm">
                                        <div class="mb-3">
                                            <label for="iconrightInput" class="form-label">Usuario</label>
                                            <div class="form-icon right">
                                                <input type="email" class="form-control form-control-icon" id="loginUsuario" placeholder="Ingrese su usuario">
                                                <i class="ri-mail-unread-line"></i>
                                            </div>
                                        </div>

                                        <div class="mb-3">
                                            <label class="form-label" for="password-input">Contraseña</label>
                                            <div class="position-relative auth-pass-inputgroup mb-3">
                                                <input type="password" class="form-control pe-5 password-input" placeholder="Ingrese su contraseña" id="loginPassword">
                                                <button class="btn btn-link position-absolute end-0 top-0 text-decoration-none text-muted password-addon" type="button" id="password-addon">
                                                    <i class="ri-eye-fill align-middle"></i>
                                                </button>
                                            </div>
                                        </div>

                                        <div class="mt-4">
                                            <button type="button" id="loginButton" class="btn btn-soft-info waves-effect waves-light w-100 rounded-pill">Iniciar Sesión</button>
                                        </div>
                                    </form>
                                </div>

                                <!-- Contenedor para las alertas -->
                                <div id="alertContainer" class="d-none">
                                    <div class="alert alert-danger alert-dismissible fade show" role="alert" id="errorAlert">
                                        <strong>Error!</strong> <span id="errorMessage">@ViewData["ErrorMessage"]</span>
                                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>

                <!-- Spinner de carga (sobre el login) -->
                <div id="loadingSpinner" class="d-none">
                    <div class="d-flex flex-column align-items-center position-fixed top-0 start-0 w-100 h-100 bg-light justify-content-center"
                         style="background: rgba(173, 216, 230, 0.6);">
                        <img src="~/assets/images/gif_carga.gif" alt="Cargando..." style="width: 100px; height: auto;">
                        <div class="spinner-border my-3" role="status" style="color: #5bc0de;">
                            <span class="visually-hidden">Cargando...</span>
                        </div>
                        <p id="dynamicText" class="text-info fw-bold">Por favor, espere mientras procesamos su solicitud...</p>
                    </div>
                </div>

            </div>
        </div>

        <!-- Footer -->
        <footer class="footer">
            <div class="container">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="text-center">
                            <p class="mb-0 text-muted">
                                &copy; <script>document.write(new Date().getFullYear())</script> Expermed. Hecho por IF2BPO
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </footer>
    </div>

    <!-- end auth-page-wrapper -->
    @await Html.PartialAsync("_vendor_scripts")

    <!-- particles js -->
    <script src="~/assets/libs/particles.js/particles.js"></script>
    <!-- particles app js -->
    <script src="~/assets/js/pages/particles.app.js"></script>
    <!-- password-addon init -->
    <script src="~/assets/js/pages/password-addon.init.js"></script>

    <script>
        // Frases médicas para mostrar dinámicamente
        const medicalPhrases = [
            "Por favor, espere mientras validamos sus datos médicos.",
            "Estamos verificando la disponibilidad de su historial clínico.",
            "Analizando la información para brindarle el mejor servicio.",
            "Cargando detalles de su expediente médico.",
            "Por favor, espere mientras preparamos su receta digital."
        ];

        // Función para cambiar el texto dinámico en el spinner
        function setDynamicText() {
            const dynamicTextElement = document.getElementById("dynamicText");
            if (dynamicTextElement) {
                const randomIndex = Math.floor(Math.random() * medicalPhrases.length);
                dynamicTextElement.textContent = medicalPhrases[randomIndex];
            }
        }

        // Llamar a la función para inicializar el texto dinámico cada 3 segundos
        let dynamicTextInterval;
        function startDynamicText() {
            dynamicTextInterval = setInterval(setDynamicText, 3000); // Cambia el texto cada 3 segundos
        }

        // Detener la actualización del texto dinámico cuando se termine el proceso
        function stopDynamicText() {
            clearInterval(dynamicTextInterval);
        }

        // Asegurarse de que el DOM esté completamente cargado
        document.addEventListener("DOMContentLoaded", function () {
            // Seleccionar el botón de iniciar sesión
            var loginButton = document.getElementById("loginButton");

            // Asociar el evento de clic
            loginButton.addEventListener("click", function (event) {
                event.preventDefault();  // Prevenir la acción predeterminada del botón (enviar formulario)

                // Mostrar el spinner
                document.getElementById("loadingSpinner").classList.remove("d-none");

                // Deshabilitar el formulario mientras se realiza la solicitud
                document.getElementById("loginForm").classList.add("d-none");

                // Iniciar la actualización dinámica del texto
                startDynamicText();

                // Obtener los valores de los campos de usuario y contraseña
                var loginUsuario = document.getElementById("loginUsuario").value;
                var loginPassword = document.getElementById("loginPassword").value;

                // Verificar si los campos están vacíos
                if (!loginUsuario || !loginPassword) {
                    document.getElementById("loadingSpinner").classList.add("d-none");
                    document.getElementById("loginForm").classList.remove("d-none");
                    document.getElementById("alertContainer").classList.remove("d-none");
                    document.getElementById("errorMessage").textContent = "Por favor, complete todos los campos.";
                    stopDynamicText();
                    return; // Detener si falta información
                }

                // Enviar la solicitud AJAX al controlador
                fetch('@Url.Action("SignInBasic", "Authentication")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded' // Indicar que los datos son form-urlencoded
                    },
                    body: new URLSearchParams({
                        username: loginUsuario,
                        password: loginPassword
                    })
                })
                .then(response => response.json())  // Esperar la respuesta en formato JSON
                .then(data => {
                    console.log(data); // Log para ver lo que devuelve el servidor

                    if (data.success) {
                        // Redirigir si el inicio de sesión es exitoso
                        window.location.href = data.redirectUrl;
                    } else {
                        // Mostrar el error si el inicio de sesión falla
                        document.getElementById("loadingSpinner").classList.add("d-none");
                        document.getElementById("loginForm").classList.remove("d-none");
                        document.getElementById("alertContainer").classList.remove("d-none");
                        document.getElementById("errorMessage").textContent = data.errorMessage;

                        // Detener la actualización del texto dinámico
                        stopDynamicText();
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    // Mostrar mensaje de error en caso de fallo en la solicitud
                    document.getElementById("loadingSpinner").classList.add("d-none");
                    document.getElementById("loginForm").classList.remove("d-none");
                    document.getElementById("alertContainer").classList.remove("d-none");
                    document.getElementById("errorMessage").textContent = "Ocurrió un error inesperado. Por favor, intente de nuevo.";

                    // Detener la actualización del texto dinámico
                    stopDynamicText();
                });
            });
        });
    </script>

</body>
</html>
